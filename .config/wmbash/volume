#! /bin/sh
maxVolPercent=200
maxMicPercent=250
dev=$1
action=$2
step=5%

set_next_device () {
  pacmd list-$1 | grep -e 'name:' -e 'index:' -e 'available:' | tr '\n' ' ' | 
    sed 's/* index:/index: */g'  | sed 's/index:/\n/g' | grep -e 'available: yes' -e 'available: unknown' > "list_$1"
    current_dev=$(cat list_$1 | grep '*' | sed 's/name: </\n/g' | sed 's/>/\n/g' | sed -n '2p')
    current_dev_index=$(cat list_$1 | grep -n '*'  | cut -f1 -d:)
    num_dev=$(cat list_$1 | wc -l)
    next_dev_index=$((current_dev_index+1))
    next_dev_index=$((next_dev_index > num_dev ? 1 : next_dev_index))
    next_dev=$(cat list_$1 | sed -n "$next_dev_index p" | sed 's/name: </\n/g' | sed 's/>/\n/g' | sed -n '2p')

    rm list_$1 > /dev/null 2>&1
    if [ $1 == "sinks" ]
    then
      pactl set-default-sink $next_dev
      for input_stream_index in {0..50}; do
          pactl move-sink-input $input_stream_index $next_dev > /dev/null 2>&1
      done
    else
      for input_stream_index in {0..50}; do
          pactl move-source-input $input_stream_index $next_dev > /dev/null 2>&1
      done
      pactl set-default-source $next_dev
    fi
}

if [ ! -e $3 ]; then
  step=$3
fi
if [ "$dev" == "vol" ]; then
    devID=$(pacmd list-sinks | grep index | grep -n "*" | sed 's/:/\n/g' | sed -n '1p')
	current=$(pacmd dump-volumes | awk NR=="$devID" | awk 'NR==1{print $8}' | sed 's/\%//')
	if [ "$action" == "devicetoggle" ]; then 
      set_next_device sinks
	elif [ "$action" == "inc" ]; then 
	    pactl set-sink-mute @DEFAULT_SINK@ false
        if [ $current -lt $((maxVolPercent-5)) ]; then
		pactl set-sink-volume @DEFAULT_SINK@ +$step
	    else
		pactl set-sink-volume @DEFAULT_SINK@ "$maxVolPercent%"
	    fi
	elif [ "$action" == "dec" ]; then 
	    pactl set-sink-volume @DEFAULT_SINK@ -$step
	elif [ "$action" == "setmid" ]; then 
	    pactl set-sink-mute @DEFAULT_SINK@ false
	    pactl set-sink-volume @DEFAULT_SINK@ 50%
	elif [ "$action" == "mute" ]; then 
	    pactl set-sink-mute @DEFAULT_SINK@ true
	elif [ "$action" == "toggle" ]; then 
	    pactl set-sink-mute @DEFAULT_SINK@ toggle
	elif [ "$action" == "status" ]; then 
        currentindex=$(pacmd list-sinks | grep -e 'name:' -e 'index:' | grep index | grep -n "* index" | sed 's/:/\n/g' | sed -n '1p' )
        currentdev=$(pacmd list-sinks | grep -A 1 -e '* index:' | sed -n '2p')
        currentdev=$(echo $currentdev | sed 's/name: <//' | sed 's/>//')
	    status=$(pacmd list-sinks | grep muted | sed -n "$((currentindex))p" | grep yes)
        if [ ! -z $(echo $currentdev | grep -i HDMI) ]; then
            externalicon="  "
        elif [ ! -z "$(echo $currentdev | grep -i Jabra)" ]; then
            externalicon="  "
        elif [ ! -z $(echo $currentdev | grep -i blu) ]; then
            BLUE='\033[0;34m'
            externalicon=" "
        else
            externalicon=""
        fi
        if [ ! -z "$status" ]; then
            echo "$externalicon "
        else
            current=$(pacmd dump-volumes | awk NR=="$devID" | awk 'NR==1{print $8}' | sed 's/\%//')
            if [ $current -gt 70 ]; then
                echo "$externalicon  $current%"
            elif [ $current -gt 30 ]; then
                echo "$externalicon $current%"
            else
                echo "$externalicon $current%"
            fi
        fi
	fi
elif [ "$dev" == "mic" ]; then
#	current=$(pacmd list-sources | grep dB | awk 'NR==3{print $5}' | sed 's/\%//')
    current=$(pacmd list-sources | grep -A 10 "* index" | sed -n '8p' | awk 'NR==1{print $5}' | sed 's/\%//')
	if [ "$action" == "inc" ]; then 
	    pactl set-source-mute @DEFAULT_SOURCE@ false
      if [ $current -lt $((maxMicPercent-5)) ]; then
            pactl set-source-volume @DEFAULT_SOURCE@ +$step
	    else
            pactl set-source-volume @DEFAULT_SOURCE@ "$maxMicPercent%"
	    fi
	elif [ "$action" == "dec" ]; then 
	    pactl set-source-volume @DEFAULT_SOURCE@ -$step
	elif [ "$action" == "mute" ]; then 
	    pactl set-source-mute @DEFAULT_SOURCE@ true
	elif [ "$action" == "toggle" ]; then 
	    pactl set-source-mute @DEFAULT_SOURCE@ toggle
	elif [ "$action" == "devicetoggle" ]; then 
      set_next_device sources
	elif [ "$action" == "status" ]; then 
	    status=$(pacmd list-sources | grep muted | grep yes)
	    if [ ! -z "$status" ]; then
            echo ""
	    else
            current=$(pacmd list-sources | grep -A 10 "* index" | sed -n '8p' | awk 'NR==1{print $5}')
            echo " $current"
	    fi
	fi
fi
