### Customized script to convert markdown to github flavoured html
#! /bin/sh
# rm *.html 2>/dev/null

while getopts b:d:h:ls:p:  o
    do
    case "$o" in
    h) echo "m2h updates the html files and optionally the page in the borwser"
       echo "-b: Specify the browser"
       echo "-p: The page to open in the given browser (see -b)"
       echo "-d: The directory of the markdown files"
       echo "-i: Runs the script in an infinite loop and updates the page, each time a markdown change is stored"
       exit
       ;;
    b) browser="$OPTARG";;
    p) page="$OPTARG";;
    d) directory="$OPTARG";;
    l) ifIter="loop";;
    \?) echo "Error! -$OPTARG"; exit 1;;
    esac
done

shift $((OPTIND-1))
if [ ! -z "$directory" ]; then
  cd $directory
fi
if [ ! -f Home.md ]; then
    echo "Please specify the correct directory!"
    exit 64
fi

function convert-markdown-to-html {
for file in *.md; do
  filename="${file%.*}"
  if [ "$file" = "Home.md" ]; then
    HOMEpage="$filename.html"
    pandoc -s --metadata title="Home" "$file" -o "$HOMEpage" 
  else
#     pandoc -f markdown -t html  "$filename.md" -o "$filename.html" 
    pandoc -f markdown -t html  "$filename.md" -o "$filename" 
  fi
#   sed -i.bak "s/\.html//g" "$filename.md"
#   cp "$file" ../
#   mv "$file.bak" "$file"
done


if [ ! -z "$browser" ]
then
  browserPID="$(pidof $browser)"
#   if [ ! -z "$browserPID" ]
#     then 
#     killall $browser
#   fi
  page="${page%.*}"
  if [ ! -z "$page" ]
    then
      if [ "$page" == "Home" ]
      then
        page="Home.html"
      else
#         page="$page.md"
        if [ ! -f "$page" ]; then page="Home.html"; fi
      fi
    else
      page="Home.html"
      echo "$page"
  fi
   $browser $page & > /dev/null 2>&1
fi
}
if [ ! -z "$ifIter" ]
  then
    while true; do if [ -e $(inotifywait -e modify *.md) ]; then clear; convert-markdown-to-html; fi; done
  else
   convert-markdown-to-html
fi
